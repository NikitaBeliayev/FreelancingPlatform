// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240106125616_CreateCommunicationChannel")]
    partial class CreateCommunicationChannel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.CommunicationChannels.CommunicationChannel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CommunicationChannels");

                    b.HasData(
                        new
                        {
                            Id = new Guid("46a99c16-c350-49a3-aea1-83d3915843c5"),
                            Type = "Email"
                        });
                });

            modelBuilder.Entity("Domain.UserCommunicationChannels.UserCommunicationChannel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CommunicationChannelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ConfirmationToken")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("bit");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CommunicationChannelId");

                    b.HasIndex("UserId");

                    b.ToTable("UserCommunicationChannels");
                });

            modelBuilder.Entity("Domain.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Domain.UserCommunicationChannels.UserCommunicationChannel", b =>
                {
                    b.HasOne("Domain.CommunicationChannels.CommunicationChannel", "CommunicationChannel")
                        .WithMany("UserCommunicationChannels")
                        .HasForeignKey("CommunicationChannelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Users.User", "User")
                        .WithMany("CommunicationChannels")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommunicationChannel");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.CommunicationChannels.CommunicationChannel", b =>
                {
                    b.Navigation("UserCommunicationChannels");
                });

            modelBuilder.Entity("Domain.Users.User", b =>
                {
                    b.Navigation("CommunicationChannels");
                });
#pragma warning restore 612, 618
        }
    }
}
