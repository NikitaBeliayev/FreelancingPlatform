image: mcr.microsoft.com/dotnet/sdk:8.0

services:
  - docker:20.10.17-dind


variables:
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_TLS_CERTDIR: ""
  FF_POSIXLY_CORRECT_ESCAPES: "true"

stages:
  - build
  - test
  - sonarqube-check
  - push

build_project:
  stage: build
  script:
    - dotnet restore
    - dotnet build
  only:
    - merge_requests
    - branches
  tags:
    - runner-docker

unit_tests:
  stage: test
  script:
    - dotnet test
  only:
    - merge_requests
    - branches
  tags:
    - runner-docker

build_and_push_to_registry:
  stage: push
  script:
    - docker login -u $AZURE_REGISTRY_USER -p $AZURE_REGISTRY_PASSWORD $AZURE_REGISTRY_SERVER
    - docker build -t $AZURE_REGISTRY_SERVER/freelancingplatform:latest .
    - docker push $AZURE_REGISTRY_SERVER/freelancingplatform:latest
  image: docker:20.10.17
  only:
    - master
  tags:
    - runner-docker

sonarqube-check:
  stage: sonarqube-check
  image: mcr.microsoft.com/dotnet/sdk:8.0
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
      - "apt-get update"
      - "apt-get install --yes openjdk-17-jre"
      - "dotnet tool install --global dotnet-sonarscanner"
      - "export PATH=\"$PATH:$HOME/.dotnet/tools\""
      - "dotnet sonarscanner begin /k:\"yauheni_tretsyak_freelancingplatform_AYyCjNuWg2X1cBXIIxsD\" /d:sonar.login=\"$SONAR_TOKEN\" /d:\"sonar.host.url=$SONAR_HOST_URL\" "
      - "dotnet build"
      - "dotnet sonarscanner end /d:sonar.login=\"$SONAR_TOKEN\""
  allow_failure: true
  only:
    - merge_requests
    - master
  tags:
    - runner-docker
